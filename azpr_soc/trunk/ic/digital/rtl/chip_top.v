//****************************************************************************************************  
//*---------------Copyright (c) 2016 C-L-G.FPGA1988.lichangbeiju. All rights reserved-----------------
//
//                   --              It to be define                --
//                   --                    ...                      --
//                   --                    ...                      --
//                   --                    ...                      --
//**************************************************************************************************** 
//File Information
//**************************************************************************************************** 
//File Name      : chip_top.v 
//Project Name   : azpr_soc
//Description    : the top level of the project.
//Github Address : github.com/C-L-G/azpr_soc/trunk/ic/digital/rtl/chip_top.v
//License        : Apache-2.0
//**************************************************************************************************** 
//Version Information
//**************************************************************************************************** 
//Create Date    : 2016-11-22 17:00
//First Author   : lichangbeiju
//Last Modify    : 2016-11-23 14:20
//Last Author    : lichangbeiju
//Version Number : 12 commits 
//**************************************************************************************************** 
//Change History(latest change first)
//yyyy.mm.dd - Author - Your log of change
//**************************************************************************************************** 
//2016.12.08 - lichangbeiju - Change the include.
//2016.11.22 - lichangbeiju - Change the coding style.
//2016.11.22 - lichangbeiju - Add io port.
//**************************************************************************************************** 
`include "sys_include.h"

`include "gpio/gpio.h"

module chip_top (
    input   wire                            clk_ref,       
    input   wire                            reset_sw       
    /********** UART **********/
    `ifdef IMPLEMENT_UART 
    ,input  wire                            uart_rx        
    ,output wire                            uart_tx        
    `endif
    `ifdef IMPLEMENT_GPIO 
    `ifdef GPIO_IN_CH    
    ,input  wire    [`GPIO_IN_CH-1:0]       gpio_in  
    `endif
    `ifdef GPIO_OUT_CH   
    ,output wire    [`GPIO_OUT_CH-1:0]      gpio_out 
    `endif
    `ifdef GPIO_IO_CH    
    ,inout  wire    [`GPIO_IO_CH-1:0]       gpio_io  
    `endif
    `endif
);

    //************************************************************************************************
    // 1.Parameter and constant define
    //************************************************************************************************
    
    
    //************************************************************************************************
    // 2.Register and wire declaration
    //************************************************************************************************
    //------------------------------------------------------------------------------------------------
    // 2.1 the output reg
    //------------------------------------------------------------------------------------------------   

    //------------------------------------------------------------------------------------------------
    // 2.x the test logic
    //------------------------------------------------------------------------------------------------
    wire                       clk          ;           
    wire                       clk_n        ;          
    wire                       chip_reset   ;    

    //************************************************************************************************
    // 3.Main code
    //************************************************************************************************


    //------------------------------------------------------------------------------------------------
    // 3.1 the master grant logic
    //------------------------------------------------------------------------------------------------

    //************************************************************************************************
    // 4.Sub module instantiation
    //************************************************************************************************

    //------------------------------------------------------------------------------------------------
    // 4.1 the clk generate module
    //------------------------------------------------------------------------------------------------    
    clk_gen clk_gen (
        .clk_ref        (clk_ref        ),              
        .reset_sw       (reset_sw       ),             
        .clk            (clk            ),                  
        .clk_n          (clk_n          ),                 
        .chip_reset     (chip_reset     )            
    );
    //------------------------------------------------------------------------------------------------
    // 4.2 the cpu chip
    //------------------------------------------------------------------------------------------------    
    chip chip (
        .clk            (clk            ),                      
        .clk_n          (clk_n          ),                     
        .reset          (chip_reset     )                
        /********** UART **********/
    `ifdef IMPLEMENT_UART
        , .uart_rx      (uart_rx        )                 
        , .uart_tx      (uart_tx        )                 
    `endif
    `ifdef IMPLEMENT_GPIO
    `ifdef GPIO_IN_CH  
        , .gpio_in      (gpio_in        )                  
    `endif
    `ifdef GPIO_OUT_CH 
        , .gpio_out     (gpio_out       )                
    `endif
    `ifdef GPIO_IO_CH  
        , .gpio_io      (gpio_io        )                 
    `endif
    `endif
    );

endmodule
//****************************************************************************************************
//End of Module
//****************************************************************************************************
